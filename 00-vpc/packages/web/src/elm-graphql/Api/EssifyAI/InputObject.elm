-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.EssifyAI.InputObject exposing (..)

import Api.EssifyAI.CustomScalarCodecs
import Api.EssifyAI.Interface
import Api.EssifyAI.Object
import Api.EssifyAI.Scalar
import Api.EssifyAI.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


buildAddConversationStepAttrs :
    AddConversationStepAttrsRequiredFields
    -> (AddConversationStepAttrsOptionalFields -> AddConversationStepAttrsOptionalFields)
    -> AddConversationStepAttrs
buildAddConversationStepAttrs required____ fillOptionals____ =
    let
        optionals____ =
            fillOptionals____
                { data = Absent }
    in
    { content = required____.content, data = optionals____.data }


type alias AddConversationStepAttrsRequiredFields =
    { content : String }


type alias AddConversationStepAttrsOptionalFields =
    { data : OptionalArgument Api.EssifyAI.CustomScalarCodecs.Json }


{-| Type for the AddConversationStepAttrs input object.
-}
type alias AddConversationStepAttrs =
    { content : String
    , data : OptionalArgument Api.EssifyAI.CustomScalarCodecs.Json
    }


{-| Encode a AddConversationStepAttrs into a value that can be used as an argument.
-}
encodeAddConversationStepAttrs : AddConversationStepAttrs -> Value
encodeAddConversationStepAttrs input____ =
    Encode.maybeObject
        [ ( "content", Encode.string input____.content |> Just ), ( "data", (Api.EssifyAI.CustomScalarCodecs.codecs |> Api.EssifyAI.Scalar.unwrapEncoder .codecJson) |> Encode.optional input____.data ) ]


buildAddConversationStepInput :
    AddConversationStepInputRequiredFields
    -> AddConversationStepInput
buildAddConversationStepInput required____ =
    { attrs = required____.attrs, conversationId = required____.conversationId }


type alias AddConversationStepInputRequiredFields =
    { attrs : AddConversationStepAttrs
    , conversationId : Api.EssifyAI.CustomScalarCodecs.Id
    }


{-| Type for the AddConversationStepInput input object.
-}
type alias AddConversationStepInput =
    { attrs : AddConversationStepAttrs
    , conversationId : Api.EssifyAI.CustomScalarCodecs.Id
    }


{-| Encode a AddConversationStepInput into a value that can be used as an argument.
-}
encodeAddConversationStepInput : AddConversationStepInput -> Value
encodeAddConversationStepInput input____ =
    Encode.maybeObject
        [ ( "attrs", encodeAddConversationStepAttrs input____.attrs |> Just ), ( "conversationId", (Api.EssifyAI.CustomScalarCodecs.codecs |> Api.EssifyAI.Scalar.unwrapEncoder .codecId) input____.conversationId |> Just ) ]


buildAuthenticateInput :
    AuthenticateInputRequiredFields
    -> AuthenticateInput
buildAuthenticateInput required____ =
    { email = required____.email, password = required____.password }


type alias AuthenticateInputRequiredFields =
    { email : String
    , password : String
    }


{-| Type for the AuthenticateInput input object.
-}
type alias AuthenticateInput =
    { email : String
    , password : String
    }


{-| Encode a AuthenticateInput into a value that can be used as an argument.
-}
encodeAuthenticateInput : AuthenticateInput -> Value
encodeAuthenticateInput input____ =
    Encode.maybeObject
        [ ( "email", Encode.string input____.email |> Just ), ( "password", Encode.string input____.password |> Just ) ]


buildCreateApiTokenInput :
    CreateApiTokenInputRequiredFields
    -> CreateApiTokenInput
buildCreateApiTokenInput required____ =
    { name = required____.name }


type alias CreateApiTokenInputRequiredFields =
    { name : String }


{-| Type for the CreateApiTokenInput input object.
-}
type alias CreateApiTokenInput =
    { name : String }


{-| Encode a CreateApiTokenInput into a value that can be used as an argument.
-}
encodeCreateApiTokenInput : CreateApiTokenInput -> Value
encodeCreateApiTokenInput input____ =
    Encode.maybeObject
        [ ( "name", Encode.string input____.name |> Just ) ]


buildCreateConversationAttrs :
    CreateConversationAttrsRequiredFields
    -> (CreateConversationAttrsOptionalFields -> CreateConversationAttrsOptionalFields)
    -> CreateConversationAttrs
buildCreateConversationAttrs required____ fillOptionals____ =
    let
        optionals____ =
            fillOptionals____
                { data = Absent }
    in
    { data = optionals____.data, title = required____.title }


type alias CreateConversationAttrsRequiredFields =
    { title : String }


type alias CreateConversationAttrsOptionalFields =
    { data : OptionalArgument Api.EssifyAI.CustomScalarCodecs.Json }


{-| Type for the CreateConversationAttrs input object.
-}
type alias CreateConversationAttrs =
    { data : OptionalArgument Api.EssifyAI.CustomScalarCodecs.Json
    , title : String
    }


{-| Encode a CreateConversationAttrs into a value that can be used as an argument.
-}
encodeCreateConversationAttrs : CreateConversationAttrs -> Value
encodeCreateConversationAttrs input____ =
    Encode.maybeObject
        [ ( "data", (Api.EssifyAI.CustomScalarCodecs.codecs |> Api.EssifyAI.Scalar.unwrapEncoder .codecJson) |> Encode.optional input____.data ), ( "title", Encode.string input____.title |> Just ) ]


buildCreateConversationInput :
    CreateConversationInputRequiredFields
    -> (CreateConversationInputOptionalFields -> CreateConversationInputOptionalFields)
    -> CreateConversationInput
buildCreateConversationInput required____ fillOptionals____ =
    let
        optionals____ =
            fillOptionals____
                { promptTemplateSlug = Absent }
    in
    { attrs = required____.attrs, dataroomId = required____.dataroomId, promptTemplateSlug = optionals____.promptTemplateSlug }


type alias CreateConversationInputRequiredFields =
    { attrs : CreateConversationAttrs
    , dataroomId : Api.EssifyAI.CustomScalarCodecs.Id
    }


type alias CreateConversationInputOptionalFields =
    { promptTemplateSlug : OptionalArgument String }


{-| Type for the CreateConversationInput input object.
-}
type alias CreateConversationInput =
    { attrs : CreateConversationAttrs
    , dataroomId : Api.EssifyAI.CustomScalarCodecs.Id
    , promptTemplateSlug : OptionalArgument String
    }


{-| Encode a CreateConversationInput into a value that can be used as an argument.
-}
encodeCreateConversationInput : CreateConversationInput -> Value
encodeCreateConversationInput input____ =
    Encode.maybeObject
        [ ( "attrs", encodeCreateConversationAttrs input____.attrs |> Just ), ( "dataroomId", (Api.EssifyAI.CustomScalarCodecs.codecs |> Api.EssifyAI.Scalar.unwrapEncoder .codecId) input____.dataroomId |> Just ), ( "promptTemplateSlug", Encode.string |> Encode.optional input____.promptTemplateSlug ) ]


buildCreateDataroomPromptTemplateAttrs :
    CreateDataroomPromptTemplateAttrsRequiredFields
    -> (CreateDataroomPromptTemplateAttrsOptionalFields -> CreateDataroomPromptTemplateAttrsOptionalFields)
    -> CreateDataroomPromptTemplateAttrs
buildCreateDataroomPromptTemplateAttrs required____ fillOptionals____ =
    let
        optionals____ =
            fillOptionals____
                { bindings = Absent }
    in
    { bindings = optionals____.bindings, content = required____.content, description = required____.description, title = required____.title }


type alias CreateDataroomPromptTemplateAttrsRequiredFields =
    { content : String
    , description : String
    , title : String
    }


type alias CreateDataroomPromptTemplateAttrsOptionalFields =
    { bindings : OptionalArgument (List PromptTemplateBindingSpecAttrs) }


{-| Type for the CreateDataroomPromptTemplateAttrs input object.
-}
type alias CreateDataroomPromptTemplateAttrs =
    { bindings : OptionalArgument (List PromptTemplateBindingSpecAttrs)
    , content : String
    , description : String
    , title : String
    }


{-| Encode a CreateDataroomPromptTemplateAttrs into a value that can be used as an argument.
-}
encodeCreateDataroomPromptTemplateAttrs : CreateDataroomPromptTemplateAttrs -> Value
encodeCreateDataroomPromptTemplateAttrs input____ =
    Encode.maybeObject
        [ ( "bindings", (encodePromptTemplateBindingSpecAttrs |> Encode.list) |> Encode.optional input____.bindings ), ( "content", Encode.string input____.content |> Just ), ( "description", Encode.string input____.description |> Just ), ( "title", Encode.string input____.title |> Just ) ]


buildCreateDataroomPromptTemplateInput :
    CreateDataroomPromptTemplateInputRequiredFields
    -> CreateDataroomPromptTemplateInput
buildCreateDataroomPromptTemplateInput required____ =
    { attrs = required____.attrs, dataroomId = required____.dataroomId }


type alias CreateDataroomPromptTemplateInputRequiredFields =
    { attrs : CreateDataroomPromptTemplateAttrs
    , dataroomId : Api.EssifyAI.CustomScalarCodecs.Id
    }


{-| Type for the CreateDataroomPromptTemplateInput input object.
-}
type alias CreateDataroomPromptTemplateInput =
    { attrs : CreateDataroomPromptTemplateAttrs
    , dataroomId : Api.EssifyAI.CustomScalarCodecs.Id
    }


{-| Encode a CreateDataroomPromptTemplateInput into a value that can be used as an argument.
-}
encodeCreateDataroomPromptTemplateInput : CreateDataroomPromptTemplateInput -> Value
encodeCreateDataroomPromptTemplateInput input____ =
    Encode.maybeObject
        [ ( "attrs", encodeCreateDataroomPromptTemplateAttrs input____.attrs |> Just ), ( "dataroomId", (Api.EssifyAI.CustomScalarCodecs.codecs |> Api.EssifyAI.Scalar.unwrapEncoder .codecId) input____.dataroomId |> Just ) ]


buildPromptTemplateBindingSpecAttrs :
    PromptTemplateBindingSpecAttrsRequiredFields
    -> PromptTemplateBindingSpecAttrs
buildPromptTemplateBindingSpecAttrs required____ =
    { name = required____.name, required = required____.required }


type alias PromptTemplateBindingSpecAttrsRequiredFields =
    { name : String
    , required : Bool
    }


{-| Type for the PromptTemplateBindingSpecAttrs input object.
-}
type alias PromptTemplateBindingSpecAttrs =
    { name : String
    , required : Bool
    }


{-| Encode a PromptTemplateBindingSpecAttrs into a value that can be used as an argument.
-}
encodePromptTemplateBindingSpecAttrs : PromptTemplateBindingSpecAttrs -> Value
encodePromptTemplateBindingSpecAttrs input____ =
    Encode.maybeObject
        [ ( "name", Encode.string input____.name |> Just ), ( "required", Encode.bool input____.required |> Just ) ]


buildUpdateAgentsInput :
    (UpdateAgentsInputOptionalFields -> UpdateAgentsInputOptionalFields)
    -> UpdateAgentsInput
buildUpdateAgentsInput fillOptionals____ =
    let
        optionals____ =
            fillOptionals____
                { skipDeps = Absent, skipRepo = Absent }
    in
    { skipDeps = optionals____.skipDeps, skipRepo = optionals____.skipRepo }


type alias UpdateAgentsInputOptionalFields =
    { skipDeps : OptionalArgument Bool
    , skipRepo : OptionalArgument Bool
    }


{-| Type for the UpdateAgentsInput input object.
-}
type alias UpdateAgentsInput =
    { skipDeps : OptionalArgument Bool
    , skipRepo : OptionalArgument Bool
    }


{-| Encode a UpdateAgentsInput into a value that can be used as an argument.
-}
encodeUpdateAgentsInput : UpdateAgentsInput -> Value
encodeUpdateAgentsInput input____ =
    Encode.maybeObject
        [ ( "skipDeps", Encode.bool |> Encode.optional input____.skipDeps ), ( "skipRepo", Encode.bool |> Encode.optional input____.skipRepo ) ]


buildUpdateUserAttrs :
    (UpdateUserAttrsOptionalFields -> UpdateUserAttrsOptionalFields)
    -> UpdateUserAttrs
buildUpdateUserAttrs fillOptionals____ =
    let
        optionals____ =
            fillOptionals____
                { fullName = Absent }
    in
    { fullName = optionals____.fullName }


type alias UpdateUserAttrsOptionalFields =
    { fullName : OptionalArgument String }


{-| Type for the UpdateUserAttrs input object.
-}
type alias UpdateUserAttrs =
    { fullName : OptionalArgument String }


{-| Encode a UpdateUserAttrs into a value that can be used as an argument.
-}
encodeUpdateUserAttrs : UpdateUserAttrs -> Value
encodeUpdateUserAttrs input____ =
    Encode.maybeObject
        [ ( "fullName", Encode.string |> Encode.optional input____.fullName ) ]


buildUpdateUserInput :
    UpdateUserInputRequiredFields
    -> UpdateUserInput
buildUpdateUserInput required____ =
    { attrs = required____.attrs, id = required____.id }


type alias UpdateUserInputRequiredFields =
    { attrs : UpdateUserAttrs
    , id : Api.EssifyAI.CustomScalarCodecs.Id
    }


{-| Type for the UpdateUserInput input object.
-}
type alias UpdateUserInput =
    { attrs : UpdateUserAttrs
    , id : Api.EssifyAI.CustomScalarCodecs.Id
    }


{-| Encode a UpdateUserInput into a value that can be used as an argument.
-}
encodeUpdateUserInput : UpdateUserInput -> Value
encodeUpdateUserInput input____ =
    Encode.maybeObject
        [ ( "attrs", encodeUpdateUserAttrs input____.attrs |> Just ), ( "id", (Api.EssifyAI.CustomScalarCodecs.codecs |> Api.EssifyAI.Scalar.unwrapEncoder .codecId) input____.id |> Just ) ]
