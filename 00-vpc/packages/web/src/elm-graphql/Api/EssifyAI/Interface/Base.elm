-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.EssifyAI.Interface.Base exposing (..)

import Api.EssifyAI.CustomScalarCodecs
import Api.EssifyAI.InputObject
import Api.EssifyAI.Interface
import Api.EssifyAI.Object
import Api.EssifyAI.Scalar
import Api.EssifyAI.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (FragmentSelectionSet(..), SelectionSet(..))
import Json.Decode as Decode


type alias Fragments decodesTo =
    { onApiToken : SelectionSet decodesTo Api.EssifyAI.Object.ApiToken
    , onConversation : SelectionSet decodesTo Api.EssifyAI.Object.Conversation
    , onConversationStep : SelectionSet decodesTo Api.EssifyAI.Object.ConversationStep
    , onDataroom : SelectionSet decodesTo Api.EssifyAI.Object.Dataroom
    , onDataroomPromptTemplate : SelectionSet decodesTo Api.EssifyAI.Object.DataroomPromptTemplate
    , onUser : SelectionSet decodesTo Api.EssifyAI.Object.User
    }


{-| Build an exhaustive selection of type-specific fragments.
-}
fragments :
    Fragments decodesTo
    -> SelectionSet decodesTo Api.EssifyAI.Interface.Base
fragments selections____ =
    Object.exhaustiveFragmentSelection
        [ Object.buildFragment "ApiToken" selections____.onApiToken
        , Object.buildFragment "Conversation" selections____.onConversation
        , Object.buildFragment "ConversationStep" selections____.onConversationStep
        , Object.buildFragment "Dataroom" selections____.onDataroom
        , Object.buildFragment "DataroomPromptTemplate" selections____.onDataroomPromptTemplate
        , Object.buildFragment "User" selections____.onUser
        ]


{-| Can be used to create a non-exhaustive set of fragments by using the record
update syntax to add `SelectionSet`s for the types you want to handle.
-}
maybeFragments : Fragments (Maybe decodesTo)
maybeFragments =
    { onApiToken = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onConversation = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onConversationStep = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onDataroom = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onDataroomPromptTemplate = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onUser = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    }


{-| The entity's creation timestamp.
-}
insertedAt : SelectionSet Api.EssifyAI.CustomScalarCodecs.DateTime Api.EssifyAI.Interface.Base
insertedAt =
    Object.selectionForField "Api.EssifyAI.CustomScalarCodecs.DateTime" "insertedAt" [] (Api.EssifyAI.CustomScalarCodecs.codecs |> Api.EssifyAI.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| The entity's last update timestamp.
-}
updatedAt : SelectionSet Api.EssifyAI.CustomScalarCodecs.DateTime Api.EssifyAI.Interface.Base
updatedAt =
    Object.selectionForField "Api.EssifyAI.CustomScalarCodecs.DateTime" "updatedAt" [] (Api.EssifyAI.CustomScalarCodecs.codecs |> Api.EssifyAI.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)
